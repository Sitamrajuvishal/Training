Q. Implement a method SliceArray that takes an array, a starting index, and an end index, then returns a new array containing the elements from the start to the end index.



import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] array = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        int startIndex = 2;
        int endIndex = 5;
        int[] slicedArray = SliceArray(array, startIndex, endIndex);
        System.out.println("Original Array: " + Arrays.toString(array));
        System.out.println("Sliced Array: " + Arrays.toString(slicedArray));
    }

    public static int[] SliceArray(int[] array, int startIndex, int endIndex) {
        // Check if the indices are valid
        if (startIndex < 0 || startIndex >= array.length || endIndex < 0 || endIndex >= array.length || startIndex > endIndex) {
            throw new IllegalArgumentException("Invalid start or end index");
        }

        // Calculate the length of the sliced array
        int length = endIndex - startIndex + 1;

        // Create a new array to store the sliced elements
        int[] slicedArray = new int[length];

        // Copy the elements from the original array to the sliced array
        for (int i = 0; i < length; i++) {
            slicedArray[i] = array[startIndex + i];
        }

        return slicedArray;
    }
}
