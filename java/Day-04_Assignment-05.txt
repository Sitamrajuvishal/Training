Q. Create a recursive function to find the nth element of a Fibonacci sequence and store the first n elements in an array.


import java.util.Arrays;

public class Fibonacci {

    // Function to find the nth Fibonacci number
    public static int nthFibonacci(int n) {
        if (n <= 0) {
            return -1; // Invalid input
        } else if (n == 1 || n == 2) {
            return n - 1; // Base cases: 0th and 1st Fibonacci numbers are 0 and 1 respectively
        } else {
            return nthFibonacci(n - 1) + nthFibonacci(n - 2); // Recursive call to find nth Fibonacci number
        }
    }

    // Function to store the first n Fibonacci numbers in an array
    public static int[] fibonacciArray(int n) {
        if (n <= 0) {
            return new int[0]; // Empty array for invalid input
        } else {
            int[] fibArray = new int[n]; // Array to store Fibonacci numbers
            for (int i = 0; i < n; i++) {
                fibArray[i] = nthFibonacci(i + 1); // Fill the array with Fibonacci numbers
            }
            return fibArray;
        }
    }

    public static void main(String[] args) {
        int n = 10; // Change the value of n as needed
        int[] fibArray = fibonacciArray(n);
        System.out.println("Fibonacci Sequence: " + Arrays.toString(fibArray));
        System.out.println("The " + n + "th Fibonacci number is: " + nthFibonacci(n));
    }
}
